[{"/Users/shchoi/Documents/GitHub/editor_tutorial/src/reportWebVitals.js":"1","/Users/shchoi/Documents/GitHub/editor_tutorial/src/Tutorial.js":"2","/Users/shchoi/Documents/GitHub/editor_tutorial/src/ActionArea.js":"3","/Users/shchoi/Documents/GitHub/editor_tutorial/src/index.js":"4","/Users/shchoi/Documents/GitHub/editor_tutorial/src/Alert.js":"5","/Users/shchoi/Documents/GitHub/editor_tutorial/src/App.js":"6"},{"size":362,"mtime":1609828249583,"results":"7","hashOfConfig":"8"},{"size":36800,"mtime":1611024864741,"results":"9","hashOfConfig":"8"},{"size":3796,"mtime":1611015893598,"results":"10","hashOfConfig":"8"},{"size":570,"mtime":1609828249583,"results":"11","hashOfConfig":"8"},{"size":1353,"mtime":1606822170000,"results":"12","hashOfConfig":"8"},{"size":252,"mtime":1609828249582,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"v3acv3",{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shchoi/Documents/GitHub/editor_tutorial/src/reportWebVitals.js",[],"/Users/shchoi/Documents/GitHub/editor_tutorial/src/Tutorial.js",["28","29"],"import { useEffect, useState, useMemo } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport qs from \"qs\";\r\nimport ActionArea from \"./ActionArea\";\r\nimport Alert from \"./Alert\";\r\n\r\nconst Tutorial = ({ history, location }) => {\r\n    const [num, setNum] = useState(0); // 현재 진행 중인 순서 번호\r\n    const [percent, setPercent] = useState(0); // 튜토리얼 진행률\r\n    const [transitionToggle, setTransitionToggle] = useState({\r\n        background: false,\r\n        alert: false,\r\n        congraturation: false,\r\n        congraturationButton: false,\r\n    });\r\n    const [subTaskNum, setSubTaskNum] = useState(1); // 개별 튜토리얼 내 여러 단게가 있을 시, 단계 표시\r\n    const [alert, setAlert] = useState(false); // 종료 팝업 표시 여부\r\n    const [dimPosition, setDimPosition] = useState({\r\n        width: 0,\r\n        height: 0,\r\n        top: 0,\r\n        left: 0,\r\n    });\r\n    // <-- 이미지 올릴 height 계산-->\r\n\r\n    const [screenUp, setScreenUp] = useState(false);\r\n    let calHeight = window.innerWidth * 2.1653333333;\r\n    let realHeight = window.innerHeight;\r\n    let widthRatio;\r\n    if (window.innerWidth >= 750) {\r\n        widthRatio = 28;\r\n    } else {\r\n        widthRatio = window.innerWidth * 0.0373333333;\r\n    }\r\n\r\n    let upHeight = calHeight - realHeight + 12.8571428571 * widthRatio;\r\n\r\n    if (upHeight <= 0) {\r\n        upHeight = 0;\r\n    }\r\n\r\n    // <-------------------------------->\r\n\r\n    const subtaskChange = (e) => {\r\n        setSubTaskNum(subTaskNum + 1);\r\n    };\r\n\r\n    // action을 취하는 경우\r\n    const handlechange = (e) => {\r\n        setNum(num + 1);\r\n        // 진행 퍼센트 계산\r\n        setPercent((value.showPageNum * 100) / value.maxPageNum);\r\n\r\n        // 배경화면 어둡게 한 것 제거\r\n        setTransitionToggle({\r\n            ...transitionToggle,\r\n            background: false,\r\n        });\r\n\r\n        // 0.3초 후 congraturation 표시\r\n        setTimeout(() => {\r\n            setTransitionToggle({\r\n                ...transitionToggle,\r\n                background: false,\r\n                congraturation: true,\r\n            });\r\n            if (value.showPageNum === value.maxPageNum) {\r\n                nextButton.current.innerText = \"완료\";\r\n            }\r\n        }, 300);\r\n\r\n        // 1초 후 다음 버튼 표시\r\n        setTimeout(() => {\r\n            setTransitionToggle({\r\n                ...transitionToggle,\r\n                background: false,\r\n                congraturation: true,\r\n                congraturationButton: true,\r\n            });\r\n        }, 1000);\r\n    };\r\n\r\n    // 다음으로 넘어갈 터치 영역 정의 함수\r\n    const actionAreaMove = (width, height, top, left) => {\r\n        setDimPosition({\r\n            ...dimPosition,\r\n            width: width,\r\n            height: height,\r\n            top: top,\r\n            left: left,\r\n        });\r\n        setSubTaskNum(subTaskNum + 1);\r\n    };\r\n\r\n    const pagesList = [\r\n        {\r\n            id: 1,\r\n            title: \"촬영하고 싶은 소재 선택하기\",\r\n            body: \"이번 영상에서 담아볼 소재를 선택해보세요. \\n선택한 내용에 맞는 촬영 가이드를 제공해드립니다.\",\r\n            success: \"선택한 순서에 따라서 촬영 순서도 결정되니 \\n원하는 순서대로 선택해보세요.\",\r\n            position: [13, 5.8, 0.4, 0.8177777778],\r\n            screenUp: false,\r\n            actiondiv: [\r\n                <div\r\n                    onClick={() => {\r\n                        actionAreaMove(17.5, 4, 0.063234811, 0.7902222222);\r\n                    }}\r\n                    className=\"fullsize\"\r\n                ></div>,\r\n                <div onClick={handlechange} className=\"fullsize\"></div>,\r\n            ],\r\n            backgroundDivBefore: [\"tutorial_1_1\", \"tutorial_1_2\"],\r\n            backgroundDivAfter: \"tutorial_1_3\",\r\n            tooltipDiv: [\r\n                {\r\n                    body: \"촬영하고자 하는 내용을 확인해 보세요.\",\r\n                    length: \"75\",\r\n                    arrowPosition: \"bottom right\",\r\n                    x: \"30\",\r\n                    y: \"30\",\r\n                },\r\n                {\r\n                    body: \"선택완료를 누르면 촬영가이드가 제공됩니다.\",\r\n                    length: \"70\",\r\n                    arrowPosition: \"top right\",\r\n                    x: \"24\",\r\n                    y: \"15\",\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            id: 2,\r\n            title: \"촬영하기\",\r\n            body: \"콘텐츠를 만들 때 필요한 내용들을 알려드립니다.\\n가이드를 참고하여 소재 별로 촬영을 진행해보세요.\",\r\n            success: \"가이드 내용 중 본인이 필요한 부분만 참고하세요.\",\r\n\r\n            position: [10, 4, 0.0541871921, 0.456],\r\n            screenUp: false,\r\n            actiondiv: [\r\n                <div\r\n                    onClick={() => {\r\n                        actionAreaMove(17, 7.4, 0.2032019704, 0.5866666667);\r\n                    }}\r\n                    className=\"fullsize\"\r\n                ></div>,\r\n                <div\r\n                    onClick={() => {\r\n                        actionAreaMove(37, 6, 0.3571428571, 0.024);\r\n                    }}\r\n                    className=\"fullsize\"\r\n                ></div>,\r\n                <div\r\n                    onClick={() => {\r\n                        actionAreaMove(12, 5.5, 0.2967980296, 0.8533333333);\r\n                    }}\r\n                    className=\"fullsize\"\r\n                ></div>,\r\n                <div onClick={handlechange} className=\"fullsize\"></div>,\r\n            ],\r\n            backgroundDivBefore: [\"tutorial_2_1\", \"tutorial_2_2\", \"tutorial_2_3\", \"tutorial_2_3\"],\r\n            backgroundDivAfter: \"tutorial_2_3\",\r\n            tooltipDiv: [\r\n                {\r\n                    body: \"촬영하고자 하는 소재를 선택하세요.\",\r\n                    length: \"60\",\r\n                    arrowPosition: \"top right\",\r\n                    x: \"0\",\r\n                    y: \"15\",\r\n                },\r\n                {\r\n                    body: \"촬영하기를 눌러 촬영을 진행하세요.\",\r\n                    length: \"70\",\r\n                    arrowPosition: \"top right\",\r\n                    x: \"8\",\r\n                    y: \"33\",\r\n                },\r\n                {\r\n                    body: \"이 주제 촬영이 끝났다면 다음 소재 촬영하기를 누르세요.\",\r\n                    length: \"90\",\r\n                    arrowPosition: \"top left\",\r\n                    x: \"6\",\r\n                    y: \"47\",\r\n                },\r\n                {\r\n                    body: \"모든 촬영이 끝났다면 편집으로 이동하세요.\",\r\n                    length: \"80\",\r\n                    arrowPosition: \"top right\",\r\n                    x: \"17\",\r\n                    y: \"40\",\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            id: 3,\r\n            title: \"클립 길이 조절하기\",\r\n            body: \"클립을 선택한 후 시작점과 끝점을 \\n원하는 위치까지 움직여보세요.\",\r\n            success: \"세부적인 조절을 위해서는 하단 화살표를 이용해보세요.\",\r\n            position: [70, 5.5, 0.5233990148, 0.2266666667],\r\n            screenUp: true,\r\n            actiondiv: [\r\n                <div\r\n                    onClick={() => {\r\n                        actionAreaMove(13, 5.4, 0.525862069, 0.8186666667);\r\n                    }}\r\n                    className=\"fullsize\"\r\n                ></div>,\r\n                <div\r\n                    onClick={() => {\r\n                        actionAreaMove(15.7, 7.1, 0.5123152709, 0.5333333333);\r\n                    }}\r\n                    className=\"fullsize\"\r\n                ></div>,\r\n                <div\r\n                    onClick={() => {\r\n                        actionAreaMove(50, 5.5, 0.59591133, 0.2508888889);\r\n                    }}\r\n                    className=\"fullsize\"\r\n                ></div>,\r\n                <div onClick={handlechange} className=\"fullsize\"></div>,\r\n            ],\r\n            backgroundDivBefore: [\"tutorial_3_1\", \"tutorial_3_2\", \"tutorial_3_3\", \"tutorial_3_4\"],\r\n            backgroundDivAfter: \"tutorial_3_5\",\r\n            tooltipDiv: [\r\n                {\r\n                    body: \"편집을 원하는 클립을 선택하세요.\",\r\n                    length: \"65\",\r\n                    arrowPosition: \"top right\",\r\n                    x: \"0\",\r\n                    y: \"60\",\r\n                },\r\n                {\r\n                    body: \"out 포인트를 터치해보세요.\",\r\n                    length: \"65\",\r\n                    arrowPosition: \"bottom right\",\r\n                    x: \"24\",\r\n                    y: \"44\",\r\n                },\r\n                {\r\n                    body: \"포인트를 드래그하여 길이를 조절 할 수 있습니다.\",\r\n                    length: \"80\",\r\n                    arrowPosition: \"bottom right\",\r\n                    x: \"0\",\r\n                    y: \"44\",\r\n                },\r\n                {\r\n                    body: \"1 프레임 단위 세밀한 편집이 필요할 때 사용하세요.\",\r\n                    length: \"80\",\r\n                    arrowPosition: \"bottom right\",\r\n                    x: \"0\",\r\n                    y: \"49\",\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            id: 4,\r\n            title: \"클립 하단 기능 확인하기\",\r\n            body: \"클립 하단에 있는 삭제, 음량, 복사, 추가 버튼을 사용해보세요.\",\r\n            success: \"한 클립을 여러 개로 나누어 쓸 때 복사 기능이 유용합니다.\",\r\n            position: [11.7, 5.7, 0.907635468, 0.0473333333],\r\n            screenUp: true,\r\n            actiondiv: [\r\n                <>\r\n                    <div\r\n                        onClick={() => {\r\n                            actionAreaMove(11.7, 5.7, 0.907635468, 0.3073333333);\r\n                        }}\r\n                        className=\"fullsize\"\r\n                    ></div>\r\n                </>,\r\n                <div\r\n                    onClick={() => {\r\n                        actionAreaMove(100, 30.4, 0.7, 0);\r\n                    }}\r\n                    className=\"fullsize\"\r\n                ></div>,\r\n                <div\r\n                    onClick={() => {\r\n                        actionAreaMove(11.7, 5.7, 0.907635468, 0.5773333333);\r\n                    }}\r\n                    className=\"fullsize\"\r\n                ></div>,\r\n                <div\r\n                    onClick={() => {\r\n                        actionAreaMove(11.7, 5.7, 0.907635468, 0.84);\r\n                    }}\r\n                    className=\"fullsize\"\r\n                ></div>,\r\n                <div onClick={handlechange} className=\"fullsize\"></div>,\r\n            ],\r\n            backgroundDivBefore: [\"tutorial_4_1\", \"tutorial_4_1\", \"tutorial_4_2\", \"tutorial_4_1\", \"tutorial_4_1\"],\r\n            backgroundDivAfter: \"tutorial_4_1\",\r\n            tooltipDiv: [\r\n                {\r\n                    body: \"해당 클립을 삭제하려면 터치하세요.\",\r\n                    length: \"75\",\r\n                    arrowPosition: \"bottom left\",\r\n                    x: \"0\",\r\n                    y: \"80\",\r\n                },\r\n                {\r\n                    body: \"클립의 소리를 조절하려면 터치하세요.\",\r\n                    length: \"70\",\r\n                    arrowPosition: \"bottom left\",\r\n                    x: \"24\",\r\n                    y: \"80\",\r\n                },\r\n                {\r\n                    body: \"음량 조절 후 확인을 누르면 적용됩니다.\",\r\n                    length: \"80\",\r\n                    arrowPosition: \"bottom left\",\r\n                    x: \"24\",\r\n                    y: \"60\",\r\n                },\r\n                {\r\n                    body: \"클립의 다른 부분을 사용하려면 복사해서 사용하세요.\",\r\n                    length: \"80\",\r\n                    arrowPosition: \"bottom right\",\r\n                    x: \"3\",\r\n                    y: \"80\",\r\n                },\r\n                {\r\n                    body: \"해당 클립 뒤에 클립을 추가할 때 터치하세요.\",\r\n                    length: \"70\",\r\n                    arrowPosition: \"bottom right\",\r\n                    x: \"25\",\r\n                    y: \"80\",\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            id: 5,\r\n            title: \"자막 추가하기\",\r\n            body: \"클립 위에 자막을 추가해보세요. \\n클립 단위로 자막을 추가할 수 있습니다.\",\r\n            success: \"더보기 버튼을 눌러 자막을 추가할 수 있어요\",\r\n            position: [25, 7, 0.8226600985, 0.752],\r\n            screenUp: true,\r\n            actiondiv: [\r\n                <div\r\n                    onClick={() => {\r\n                        actionAreaMove(91, 8, 0.5098522167, 0.0453333333);\r\n                    }}\r\n                    className=\"fullsize\"\r\n                ></div>,\r\n                <div\r\n                    onClick={() => {\r\n                        actionAreaMove(60.7, 7.1, 0.486453202, 0.2266666667);\r\n                    }}\r\n                    className=\"fullsize\"\r\n                ></div>,\r\n                <div onClick={handlechange} className=\"fullsize\"></div>,\r\n            ],\r\n            backgroundDivBefore: [\"tutorial_5_1\", \"tutorial_5_2\", \"tutorial_5_3\"],\r\n            backgroundDivAfter: \"tutorial_5_3\",\r\n            tooltipDiv: [\r\n                {\r\n                    body: \"자막 버튼을 눌러 자막 입력 화면으로 이동하세요.\",\r\n                    length: \"75\",\r\n                    arrowPosition: \"bottom right\",\r\n                    x: \"15\",\r\n                    y: \"73\",\r\n                },\r\n                {\r\n                    body: \"입력을 원하는 클립을 선택하세요.\",\r\n                    length: \"70\",\r\n                    arrowPosition: \"bottom right\",\r\n                    x: \"24\",\r\n                    y: \"40\",\r\n                },\r\n                {\r\n                    body: \"영상에 들어갈 자막 내용을 입력하세요.\",\r\n                    length: \"70\",\r\n                    arrowPosition: \"bottom right\",\r\n                    x: \"10\",\r\n                    y: \"38\",\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            id: 6,\r\n            title: \"자막 스타일 지정하기\",\r\n            body: \"원하는 자막 스타일을 선택해보세요.\",\r\n            success: \"테마를 바꾸면 다른 자막을 사용할 수 있습니다.\",\r\n            position: [9, 4, 0.5283251232, 0.8293333333],\r\n            screenUp: true,\r\n            actiondiv: [\r\n                <div\r\n                    onClick={() => {\r\n                        actionAreaMove(96, 8, 0.6502463054, 0.0213333333);\r\n                    }}\r\n                    className=\"fullsize\"\r\n                ></div>,\r\n                <div\r\n                    onClick={() => {\r\n                        actionAreaMove(100, 65, 0.35591133, 0);\r\n                    }}\r\n                    className=\"fullsize\"\r\n                ></div>,\r\n                <div onClick={handlechange} className=\"fullsize\"></div>,\r\n            ],\r\n            backgroundDivBefore: [\"tutorial_6_1\", \"tutorial_6_2\", \"tutorial_6_3\"],\r\n            backgroundDivAfter: \"tutorial_6_1\",\r\n            tooltipDiv: [\r\n                {\r\n                    body: \"자막 옆 더보기 버튼을 누르세요.\",\r\n                    length: \"75\",\r\n                    arrowPosition: \"bottom right\",\r\n                    x: \"15\",\r\n                    y: \"44\",\r\n                },\r\n                {\r\n                    body: \"스타일 변경 버튼을 누르세요.\",\r\n                    length: \"60\",\r\n                    arrowPosition: \"bottom right\",\r\n                    x: \"24\",\r\n                    y: \"56\",\r\n                },\r\n                {\r\n                    body: \"원하는 자막 스타일을 선택하세요.\",\r\n                    length: \"60\",\r\n                    arrowPosition: \"bottom right\",\r\n                    x: \"12\",\r\n                    y: \"27\",\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            id: 7,\r\n            title: \"자막 표시 시간 조절하기\",\r\n            body: \"원하는 시간에만 자막을 표시해보세요.\",\r\n            success: \"자막이 많아지는 경우 클립복사를 활용해보세요.\",\r\n            position: [9, 4, 0.5283251232, 0.8293333333],\r\n            screenUp: true,\r\n            actiondiv: [\r\n                <div\r\n                    onClick={() => {\r\n                        actionAreaMove(96, 8, 0.5849753695, 0.0213333333);\r\n                    }}\r\n                    className=\"fullsize\"\r\n                ></div>,\r\n                <div\r\n                    onClick={() => {\r\n                        actionAreaMove(100, 22, 0.4704433498, 0);\r\n                    }}\r\n                    className=\"fullsize\"\r\n                ></div>,\r\n                <div onClick={handlechange} className=\"fullsize\"></div>,\r\n            ],\r\n            backgroundDivBefore: [\"tutorial_7_1\", \"tutorial_7_2\", \"tutorial_7_3\"],\r\n            backgroundDivAfter: \"tutorial_7_1\",\r\n            tooltipDiv: [\r\n                {\r\n                    body: \"자막 옆 더보기 버튼을 누르세요.\",\r\n                    length: \"65\",\r\n                    arrowPosition: \"top right\",\r\n                    x: \"25\",\r\n                    y: \"64\",\r\n                },\r\n                {\r\n                    body: \"시간 변경 버튼을 누르세요.\",\r\n                    length: \"60\",\r\n                    arrowPosition: \"bottom right\",\r\n                    x: \"24\",\r\n                    y: \"50\",\r\n                },\r\n                {\r\n                    body: \"원하는대로 시간을 조절해보세요.\",\r\n                    length: \"60\",\r\n                    arrowPosition: \"top right\",\r\n                    x: \"12\",\r\n                    y: \"75\",\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            id: 8,\r\n            title: \"여러 개의 자막 넣기\",\r\n            body: \"원하는 자막을 순차적으로 표시해보세요. \\n갯수에 따라 1/N만큼씩 노출이 됩니다.\",\r\n            success: \"자막이 많아지는 경우 클립복사를 활용해보세요.\",\r\n            position: [9, 4, 0.5283251232, 0.8293333333],\r\n            screenUp: true,\r\n            actiondiv: [\r\n                <div\r\n                    onClick={() => {\r\n                        actionAreaMove(96, 8, 0.7192118227, 0.0213333333);\r\n                    }}\r\n                    className=\"fullsize\"\r\n                ></div>,\r\n                <div\r\n                    onClick={() => {\r\n                        actionAreaMove(100, 27.5, 0.5837438424, 0);\r\n                    }}\r\n                    className=\"fullsize\"\r\n                ></div>,\r\n                <div onClick={handlechange} className=\"fullsize\"></div>,\r\n            ],\r\n            backgroundDivBefore: [\"tutorial_8_1\", \"tutorial_8_2\", \"tutorial_8_3\"],\r\n            backgroundDivAfter: \"tutorial_8_1\",\r\n            tooltipDiv: [\r\n                {\r\n                    body: \"자막 옆 더보기 버튼을 누르세요.\",\r\n                    length: \"65\",\r\n                    arrowPosition: \"top right\",\r\n                    x: \"25\",\r\n                    y: \"64\",\r\n                },\r\n                {\r\n                    body: \"추가 버튼을 클릭하세요.\",\r\n                    length: \"60\",\r\n                    arrowPosition: \"bottom right\",\r\n                    x: \"25\",\r\n                    y: \"63\",\r\n                },\r\n                {\r\n                    body: \"원하는 내용을 작성하세요.\",\r\n                    length: \"60\",\r\n                    arrowPosition: \"bottom right\",\r\n                    x: \"12\",\r\n                    y: \"50\",\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            id: 9,\r\n            title: \"화면 위 이미지 추가하기\",\r\n            body: \"화면 위에 이미지를 추가해서 설명해보세요.\",\r\n            success: \"한 화면에 하나의 이미지를 추가할 수 있습니다.\",\r\n            position: [84, 7, 0.552955665, 0.0826666667],\r\n            screenUp: false,\r\n            actiondiv: [\r\n                <div\r\n                    onClick={() => {\r\n                        actionAreaMove(32, 15, 0.2623152709, 0.6746666667);\r\n                    }}\r\n                    className=\"fullsize\"\r\n                ></div>,\r\n                <div\r\n                    onClick={() => {\r\n                        actionAreaMove(15, 4, 0.0603448276, 0.8);\r\n                    }}\r\n                    className=\"fullsize\"\r\n                ></div>,\r\n                <div\r\n                    onClick={() => {\r\n                        actionAreaMove(100, 17.5, 0.4975369458, 0);\r\n                    }}\r\n                    className=\"fullsize\"\r\n                ></div>,\r\n                <div onClick={handlechange} className=\"fullsize\"></div>,\r\n            ],\r\n            backgroundDivBefore: [\"tutorial_9_1\", \"tutorial_9_2\", \"tutorial_9_3\", \"tutorial_9_4\"],\r\n            backgroundDivAfter: \"tutorial_9_4\",\r\n            tooltipDiv: [\r\n                {\r\n                    body: \"이미지 추가하기를 누르세요.\",\r\n                    length: \"65\",\r\n                    arrowPosition: \"bottom right\",\r\n                    x: \"20\",\r\n                    y: \"46\",\r\n                },\r\n                {\r\n                    body: \"원하는 이미지를 선택하세요.\",\r\n                    length: \"60\",\r\n                    arrowPosition: \"top right\",\r\n                    x: \"24\",\r\n                    y: \"48\",\r\n                },\r\n                {\r\n                    body: \"선택 완료를 누르세요.\",\r\n                    length: \"50\",\r\n                    arrowPosition: \"top right\",\r\n                    x: \"42\",\r\n                    y: \"15\",\r\n                },\r\n                {\r\n                    body: \"표시할 시간을 정하세요.\",\r\n                    length: \"60\",\r\n                    arrowPosition: \"bottom right\",\r\n                    x: \"21\",\r\n                    y: \"41\",\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            id: 10,\r\n            title: \"음악 추가하기\",\r\n            body: \"영상에 어울리는 음악을 추가해보세요.\\n와이드가 음악을 제공해드립니다.\",\r\n            success: \"음악의 시작점을 잘 골라보세요.\",\r\n            position: [84, 7, 0.552955665, 0.0826666667],\r\n            screenUp: false,\r\n            actiondiv: [\r\n                <div\r\n                    onClick={() => {\r\n                        actionAreaMove(8, 3.5, 0.1896551724, 0.8746666667);\r\n                    }}\r\n                    className=\"fullsize\"\r\n                ></div>,\r\n                <div\r\n                    onClick={() => {\r\n                        actionAreaMove(15, 4, 0.0603448276, 0.8);\r\n                    }}\r\n                    className=\"fullsize\"\r\n                ></div>,\r\n                <div\r\n                    onClick={() => {\r\n                        actionAreaMove(100, 7.5, 0.4359605911, 0);\r\n                    }}\r\n                    className=\"fullsize\"\r\n                ></div>,\r\n                <div\r\n                    onClick={() => {\r\n                        actionAreaMove(100, 7.5, 0.513546798, 0);\r\n                    }}\r\n                    className=\"fullsize\"\r\n                ></div>,\r\n                <div onClick={handlechange} className=\"fullsize\"></div>,\r\n            ],\r\n            backgroundDivBefore: [\"tutorial_10_1\", \"tutorial_10_2\", \"tutorial_10_3\", \"tutorial_10_4\", \"tutorial_10_5\"],\r\n            backgroundDivAfter: \"tutorial_10_5\",\r\n            tooltipDiv: [\r\n                {\r\n                    body: \"음악 추가하기를 누르세요.\",\r\n                    length: \"75\",\r\n                    arrowPosition: \"bottom right\",\r\n                    x: \"15\",\r\n                    y: \"44\",\r\n                },\r\n                {\r\n                    body: \"원하는 음악을 선택하세요.\",\r\n                    length: \"60\",\r\n                    arrowPosition: \"top right\",\r\n                    x: \"43\",\r\n                    y: \"29\",\r\n                },\r\n                {\r\n                    body: \"추가하기를 누르세요.\",\r\n                    length: \"50\",\r\n                    arrowPosition: \"top right\",\r\n                    x: \"32\",\r\n                    y: \"15\",\r\n                },\r\n                {\r\n                    body: \"음악에서 어느 부분을 사용할 지를 선택하세요.\",\r\n                    length: \"75\",\r\n                    arrowPosition: \"bottom right\",\r\n                    x: \"10\",\r\n                    y: \"33\",\r\n                },\r\n                {\r\n                    body: \"영상 어느 부분에 음악을 추가할 지 선택하세요.\",\r\n                    length: \"75\",\r\n                    arrowPosition: \"bottom right\",\r\n                    x: \"10\",\r\n                    y: \"41\",\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            id: 11,\r\n            title: \"효과음 추가하기\",\r\n            body: \"영상에 어울리는 효과음을 추가해보세요.\\n와이드가 효과음을 제공해드립니다.\",\r\n            success: \"효과음을 잘 사용하면 영상의 집중도가 높아집니다.\",\r\n            position: [84, 7, 0.552955665, 0.0826666667],\r\n            screenUp: false,\r\n            actiondiv: [\r\n                <div\r\n                    onClick={() => {\r\n                        actionAreaMove(8, 3.5, 0.1896551724, 0.8746666667);\r\n                    }}\r\n                    className=\"fullsize\"\r\n                ></div>,\r\n                <div\r\n                    onClick={() => {\r\n                        actionAreaMove(15, 4, 0.0603448276, 0.8);\r\n                    }}\r\n                    className=\"fullsize\"\r\n                ></div>,\r\n                <div\r\n                    onClick={() => {\r\n                        actionAreaMove(100, 11.5, 0.4359605911, 0);\r\n                    }}\r\n                    className=\"fullsize\"\r\n                ></div>,\r\n\r\n                <div onClick={handlechange} className=\"fullsize\"></div>,\r\n            ],\r\n            backgroundDivBefore: [\"tutorial_11_1\", \"tutorial_11_2\", \"tutorial_11_3\", \"tutorial_11_4\"],\r\n            backgroundDivAfter: \"tutorial_11_4\",\r\n            tooltipDiv: [\r\n                {\r\n                    body: \"음악 추가하기를 누르세요.\",\r\n                    length: \"75\",\r\n                    arrowPosition: \"bottom right\",\r\n                    x: \"15\",\r\n                    y: \"44\",\r\n                },\r\n                {\r\n                    body: \"원하는 음악을 선택하세요.\",\r\n                    length: \"60\",\r\n                    arrowPosition: \"top right\",\r\n                    x: \"43\",\r\n                    y: \"29\",\r\n                },\r\n                {\r\n                    body: \"추가하기를 누르세요.\",\r\n                    length: \"50\",\r\n                    arrowPosition: \"top right\",\r\n                    x: \"32\",\r\n                    y: \"15\",\r\n                },\r\n                {\r\n                    body: \"음악에서 어느 부분을 사용할 지를 선택하세요.\",\r\n                    length: \"75\",\r\n                    arrowPosition: \"bottom right\",\r\n                    x: \"10\",\r\n                    y: \"33\",\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            id: 12,\r\n            title: \"음성 더빙하기\",\r\n            body: \"영상에 나레이션을 추가해보세요. \",\r\n            success: \"설명하고자 하는 바를 말로 잘 풀어보세요.\",\r\n            position: [89, 9, 0.5036945813, 0.0533333333],\r\n            screenUp: true,\r\n            actiondiv: [\r\n                <div\r\n                    onClick={() => {\r\n                        actionAreaMove(16, 7.5, 0.5997536946, 0.4213333333);\r\n                    }}\r\n                    className=\"fullsize\"\r\n                ></div>,\r\n                <div onClick={handlechange} className=\"fullsize\"></div>,\r\n            ],\r\n            backgroundDivBefore: [\"tutorial_12_1\", \"tutorial_12_2\"],\r\n            backgroundDivAfter: \"tutorial_12_3\",\r\n            tooltipDiv: [\r\n                {\r\n                    body: \"녹음을 원하는 부분을 선택하세요.\",\r\n                    length: \"75\",\r\n                    arrowPosition: \"bottom right\",\r\n                    x: \"15\",\r\n                    y: \"42\",\r\n                },\r\n                {\r\n                    body: \"녹음 버튼을 눌러 녹음하세요\",\r\n                    length: \"60\",\r\n                    arrowPosition: \"bottom left\",\r\n                    x: \"34\",\r\n                    y: \"52\",\r\n                },\r\n            ],\r\n        },\r\n    ];\r\n\r\n    // 진입 경로에 따라 보여줄 페이지 리스트 정의\r\n    const typelist = [\r\n        {\r\n            type: \"influencer\",\r\n            iOS_page: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],\r\n            AOS_page: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],\r\n            device: \"AOS\"\r\n        },\r\n        {\r\n            type: \"dubbing\",\r\n            iOS_page: [1, 2, 3, 5, 10, 12],\r\n            AOS_page: [1, 2, 3, 5, 10, 12],\r\n            device: \"AOS\"\r\n        },\r\n        {\r\n            type: \"chobo\",\r\n            iOS_page: [1, 2, 3, 5, 10],\r\n            AOS_page: [1, 2, 3, 5, 10],\r\n            device: \"AOS\"\r\n        },\r\n        {\r\n            type: \"test\",\r\n            page: [10,11, 12],\r\n        },\r\n        {\r\n            type: \"individual\"\r\n        },\r\n\r\n    ];\r\n\r\n    let selectedPage;\r\n    let pages = [];\r\n\r\n    // url에서 선택한 type 받아옴\r\n    const query = qs.parse(location.search, { ignoreQueryPrefix: true });\r\n    const userType = useMemo(() => typelist.find((e) => e.type === query.type), [query.type]);\r\n\r\n    // userType이 지정된 경우\r\n    if (userType !== undefined) {\r\n\r\n        // userType이 아닌 individual인 경우 해당 페이지를 호출한다.\r\n        if (query.type === \"individual\") {\r\n            pages.push(pagesList.find(e => e.id === Number(query.page)));\r\n        }\r\n\r\n        // 객체에 등록되어있는 페이지를 찾아서 리스트에 넣는다.\r\n        else{\r\n            if (query.device === \"iOS\") {\r\n                selectedPage = userType[\"iOS_page\"];\r\n            } else{\r\n                selectedPage = userType[\"AOS_page\"];\r\n            }\r\n\r\n\r\n        selectedPage.forEach((x, idx, array) => {\r\n            pages.push(pagesList.find((e) => e.id === x));\r\n        });\r\n    }\r\n    } \r\n    // Usertype이 지정되지 않은 경우 모든 페이지를 불러온다.\r\n    else {\r\n        pages = pagesList;\r\n    }\r\n\r\n    // 표시될 Value 저장\r\n    const [value, setValue] = useState({\r\n        title: \"\",\r\n        body: \"\",\r\n        pageNum: 0,\r\n        showPageNum: 1,\r\n        maxPageNum: pages.length,\r\n        pageID: pages[0].id,\r\n        success: pages[0].success,\r\n        // nextPageID: pages[1] === undefined ? \"\" : pages[1].id,\r\n    });\r\n\r\n    const nextButtonClick = (e) => {\r\n        // 튜토리얼 종료 여부 확인\r\n\r\n        // 1. 튜토리얼 종료 시\r\n        if (value.showPageNum === value.maxPageNum) {\r\n\r\n            // 신규 유저 처리\r\n            let chkNewUser;\r\n            query.newUser === \"true\" ? (chkNewUser = true) : (chkNewUser = false);\r\n            if (query.type === \"individual\" ) {\r\n                const device = query.device;\r\n\r\n                document.location.href =`./individual.html?newUser=${chkNewUser}&device=${device}`\r\n            }\r\n            // 이동\r\n            else {\r\n            document.location.href = \"./end.html?newUser=\" + chkNewUser;\r\n            }\r\n        }\r\n\r\n        //2. 종료가 아닌 경우\r\n        else {\r\n            // setTimeout(() => {\r\n            // let nextPageID;\r\n            // if (num + 1 < pages.length) {\r\n            //     // 문제 없으면 패스\r\n            // } else {\r\n            //     nextPageID = false;\r\n            // }\r\n\r\n            setTransitionToggle({\r\n                ...transitionToggle,\r\n                background: true,\r\n                congraturation: false,\r\n                congraturationButton: false,\r\n            });\r\n\r\n            setValue({\r\n                ...value,\r\n                title: pages[num].title,\r\n                body: pages[num].body,\r\n                pageNum: num,\r\n                showPageNum: num + 1,\r\n                percent: (value.showPageNum * 100) / value.maxPageNum,\r\n                pageID: pages[num].id,\r\n                // nextPageID: num+1 >= pages.length ? \"\" : false,\r\n                success: pages[num].success,\r\n            });\r\n\r\n            setSubTaskNum(1);\r\n\r\n            setDimPosition({\r\n                ...dimPosition,\r\n                width: pages[num].position[0],\r\n                height: pages[num].position[1],\r\n                top: pages[num].position[2],\r\n                left: pages[num].position[3],\r\n            });\r\n\r\n            setScreenUp(pages[num].screenUp);\r\n        }\r\n    };\r\n    // 페이지별 들어가야할 내용 정리\r\n\r\n    const nextButton = useRef();\r\n    const firework = <div className=\"after\"></div>;\r\n\r\n    // 로딩 시 어둡게 + 알럿바 표시\r\n    useEffect(() => {\r\n        setTransitionToggle({\r\n            ...transitionToggle,\r\n            background: true,\r\n            alert: true,\r\n        });\r\n        setValue({\r\n            ...value,\r\n            title: pages[0].title,\r\n            body: pages[0].body,\r\n            success: pages[0].success,\r\n        });\r\n\r\n        setSubTaskNum(1);\r\n\r\n        setDimPosition({\r\n            ...dimPosition,\r\n            width: pages[0].position[0],\r\n            height: pages[0].position[1],\r\n            top: pages[0].position[2],\r\n            left: pages[0].position[3],\r\n        });\r\n\r\n        setScreenUp(pages[0].screenUp);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"image_wrap\" style={{ transform: screenUp ? `translateY(-${upHeight}px)` : \"translateY(0)\" }}>\r\n                <ActionArea\r\n                    handlechange={handlechange}\r\n                    transitionToggle={transitionToggle}\r\n                    value={value}\r\n                    array={pages}\r\n                    subtaskChange={subtaskChange}\r\n                    subTaskNum={subTaskNum}\r\n                    dimPosition={dimPosition}\r\n                />\r\n            </div>\r\n\r\n            <div className={`alert ${transitionToggle.alert ? \"alerttoggle\" : \"\"}`}>\r\n                {transitionToggle.background ? (\r\n                    \"\"\r\n                ) : (\r\n                    <div className={`congraturation ${transitionToggle.congraturation ? \"congraturationToggle\" : \"\"}`}>\r\n                        <span className=\"title\"> {value.title} 완료</span>\r\n                        <span className=\"body\"><AddEnter array={value.success} /></span>\r\n                        <button type=\"button\" onClick={nextButtonClick} className={transitionToggle.congraturationButton ? \"toggle\" : \"\"} ref={nextButton}>\r\n                            다음\r\n                        </button>\r\n                        {firework}\r\n\r\n                    </div>\r\n                )}\r\n                <div className=\"title\">\r\n                    {value.title}\r\n                </div>\r\n\r\n                <div className=\"body\">\r\n                    <AddEnter array={value.body} />\r\n\r\n                </div>\r\n                <div className=\"progressBar-root\">\r\n                    <div className=\"progressBar\" style={{ transform: `translateX(${-100 + percent}%)` }}></div>\r\n                    <div className=\"progressBar-text\"><span className={percent >= 50 ? \"white\" : \"\"}>{Math.round(percent)}%</span><span className={percent >=57 ? \"white\" : \"\"}> 완료</span></div>\r\n                </div>\r\n                <div className=\"exit\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn-close\"\r\n                        onClick={() => {\r\n                            setAlert(true);\r\n                        }}\r\n                    ></button>\r\n                </div>\r\n            </div>\r\n\r\n            <Alert alert={alert} setAlert={setAlert} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction AddEnter({ array }) {\r\n    return array.split(\"\\n\").map((line) => {\r\n        return (\r\n            <span>\r\n                {line}\r\n                <br />\r\n            </span>\r\n        );\r\n    });\r\n}\r\nexport default Tutorial;\r\n","/Users/shchoi/Documents/GitHub/editor_tutorial/src/ActionArea.js",["30","31","32","33","34"],"import { useEffect, useState } from \"react\";\r\n\r\n\r\nconst ActionArea = ({ transitionToggle, value, array, subTaskNum, dimPosition, setScreenUp }) => {\r\n    const [actionDiv, setActionDiv] = useState(\"\");\r\n    const [backgroundDivBefore, setBackgroundDivBefore] = useState(\"\");\r\n    const [backgroundDivAfter, setBackgroundDivAfter] = useState(\"\");\r\n    const [toolTip, setToolTip] = useState(\"\");\r\n    const [url, setUrl] = useState(`./img/${backgroundDivBefore}.png`);\r\n    const [dimTop, setDimTop] = useState(0);\r\n    const [dimLeft, setDimLeft] = useState(0);\r\n    const [innerWidth, setInnerWidth] = useState(window.innerWidth);\r\n    // div 내용 추출\r\n\r\n    useEffect(() => {\r\n        console.log(value);\r\n\r\n        let currentArray = array.find((x) => x.id === value.pageID);\r\n        let backBefore = currentArray.backgroundDivBefore[subTaskNum - 1];\r\n        let backAfter = currentArray.backgroundDivAfter;\r\n\r\n        setActionDiv(currentArray.actiondiv[subTaskNum - 1]);\r\n        setBackgroundDivBefore(backBefore);\r\n        setBackgroundDivAfter(backAfter);\r\n        setToolTip(currentArray.tooltipDiv[subTaskNum - 1]);\r\n        setUrl(`./img/${backBefore}.png`);\r\n        // }\r\n    }, [value.pageID, subTaskNum]);\r\n\r\n    // 단계별, 화면 width 변화에 따른 DIM 위치 계산\r\n    useEffect(() => {\r\n        setDimTop(dimPosition.top * innerWidth * 2.1653333333);\r\n        setDimLeft(dimPosition.left * innerWidth);\r\n    }, [dimPosition, innerWidth]);\r\n\r\n    //화면 비율 변경에 따른 width 계산\r\n    useEffect(() => {\r\n        function reportWindowSize() {\r\n            setInnerWidth(window.innerWidth);\r\n        }\r\n        // Trigger this function on resize\r\n        window.addEventListener(\"resize\", reportWindowSize);\r\n        //  Cleanup for componentWillUnmount\r\n        return () => window.removeEventListener(\"resize\", reportWindowSize);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className={`backgroundDivAfter${transitionToggle.background ? \"\" : \" backgroundtoggle\"}`}>\r\n                <img src={`./img/${backgroundDivAfter}.png`} className=\"transition03s\"></img>\r\n            </div>\r\n            <div className={`backgroundDivBefore${transitionToggle.background ? \" backgroundtoggle\" : \"\"}`}>\r\n\r\n                {array\r\n                    .find((x, idx, array) => x.id === value.pageID)\r\n                    .backgroundDivBefore.map((e, i) => (\r\n                        <>\r\n                            <img src={`./img/${e}.png`} style={{ opacity: i === subTaskNum - 1 ? \"1\" : \"0\" }} className=\"transition03s backImg\"></img>\r\n                        </>\r\n                    ))}\r\n            </div>\r\n\r\n            <div className=\"backgroundArea\">\r\n                <img src=\"./img/background.png\"></img>\r\n            </div>\r\n\r\n            <div className={`actionArea${transitionToggle.background ? \" toggle\" : \"\"}`}>\r\n                <div\r\n                    className=\"content\"\r\n                    style={{\r\n                        width: `${dimPosition.width}%`,\r\n                        height: `${dimPosition.height}%`,\r\n                        borderWidth: `${dimTop}px 2000px 2000px ${dimLeft}px`,\r\n                        display: transitionToggle.background ? \"block\" : \"none\",\r\n                    }}\r\n                >\r\n                    {actionDiv}\r\n                </div>\r\n                {toolTip.body === \"\" ? (\r\n                    \"\"\r\n                ) : (\r\n                    <div className=\"arrow_wrap\" style={{ width: `${toolTip.length}%`, left: `${toolTip.x}%`, top: `${toolTip.y}%` }}>\r\n                        <div className={`arrow_box ${toolTip.arrowPosition}`}>{toolTip.body}</div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default ActionArea;\r\n","/Users/shchoi/Documents/GitHub/editor_tutorial/src/index.js",[],"/Users/shchoi/Documents/GitHub/editor_tutorial/src/Alert.js",[],"/Users/shchoi/Documents/GitHub/editor_tutorial/src/App.js",[],{"ruleId":"35","severity":1,"message":"36","line":791,"column":81,"nodeType":"37","endLine":791,"endColumn":93,"suggestions":"38"},{"ruleId":"35","severity":1,"message":"39","line":924,"column":8,"nodeType":"37","endLine":924,"endColumn":10,"suggestions":"40"},{"ruleId":"41","severity":1,"message":"42","line":9,"column":12,"nodeType":"43","messageId":"44","endLine":9,"endColumn":15},{"ruleId":"35","severity":1,"message":"45","line":28,"column":8,"nodeType":"37","endLine":28,"endColumn":34,"suggestions":"46"},{"ruleId":"47","severity":1,"message":"48","line":50,"column":17,"nodeType":"49","endLine":50,"endColumn":88},{"ruleId":"47","severity":1,"message":"48","line":58,"column":29,"nodeType":"49","endLine":58,"endColumn":145},{"ruleId":"47","severity":1,"message":"48","line":64,"column":17,"nodeType":"49","endLine":64,"endColumn":49},"react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'typelist'. Either include it or remove the dependency array.","ArrayExpression",["50"],"React Hook useEffect has missing dependencies: 'dimPosition', 'pages', 'transitionToggle', and 'value'. Either include them or remove the dependency array. You can also do a functional update 'setTransitionToggle(t => ...)' if you only need 'transitionToggle' in the 'setTransitionToggle' call.",["51"],"no-unused-vars","'url' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'array' and 'value'. Either include them or remove the dependency array.",["52"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"53","fix":"54"},{"desc":"55","fix":"56"},{"desc":"57","fix":"58"},"Update the dependencies array to be: [query.type, typelist]",{"range":"59","text":"60"},"Update the dependencies array to be: [dimPosition, pages, transitionToggle, value]",{"range":"61","text":"62"},"Update the dependencies array to be: [value.pageID, subTaskNum, value, array]",{"range":"63","text":"64"},[27349,27361],"[query.type, typelist]",[31144,31146],"[dimPosition, pages, transitionToggle, value]",[1191,1217],"[value.pageID, subTaskNum, value, array]"]